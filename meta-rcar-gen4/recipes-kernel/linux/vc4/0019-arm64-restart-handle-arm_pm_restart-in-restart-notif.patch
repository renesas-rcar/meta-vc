From b6c4e8d42c9e3391156145249e71fabc15c659a1 Mon Sep 17 00:00:00 2001
From: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
Date: Thu, 27 Jan 2022 15:01:41 +0300
Subject: [PATCH 19/92] arm64: restart: handle arm_pm_restart in restart
 notifier

Stop special-casing restart implementation that has put itself to
arm_pm_restart. Handle that in regular restart path so a higher priority
restart implementation can override it.

This matches upstream policy, implemented in commit ab6cef1d1447 ("ARM:
9095/1: ARM64: Remove arm_pm_restart()") and it's predessors, but
without changes in individual setters of arm_pm_restart.

Signed-off-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
---
 arch/arm64/kernel/process.c | 27 ++++++++++++++++++++++-----
 1 file changed, 22 insertions(+), 5 deletions(-)

diff --git a/arch/arm64/kernel/process.c b/arch/arm64/kernel/process.c
index ed919f633ed8..385f6d072831 100644
--- a/arch/arm64/kernel/process.c
+++ b/arch/arm64/kernel/process.c
@@ -136,6 +136,26 @@ void arch_cpu_idle_dead(void)
 }
 #endif
 
+static int arm64_restart_handler(struct notifier_block *nb,
+		unsigned long mode, void *cmd)
+{
+	if (arm_pm_restart)
+		arm_pm_restart(reboot_mode, cmd);
+
+	return NOTIFY_DONE;
+}
+
+static struct notifier_block arm64_restart_nb = {
+	.notifier_call = arm64_restart_handler,
+	.priority = 130,
+};
+
+static int register_arm64_restart_handler(void)
+{
+	return register_restart_handler(&arm64_restart_nb);
+}
+core_initcall(register_arm64_restart_handler);
+
 /*
  * Called by kexec, immediately prior to machine_kexec().
  *
@@ -198,11 +218,8 @@ void machine_restart(char *cmd)
 	if (efi_enabled(EFI_RUNTIME_SERVICES))
 		efi_reboot(reboot_mode, NULL);
 
-	/* Now call the architecture specific reboot code. */
-	if (arm_pm_restart)
-		arm_pm_restart(reboot_mode, cmd);
-	else
-		do_kernel_restart(cmd);
+	/* Now call the architecture registered restart handlers */
+	do_kernel_restart(cmd);
 
 	/*
 	 * Whoops - the architecture was unable to reboot.
-- 
2.30.2

